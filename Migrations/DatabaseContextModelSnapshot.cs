// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stressless_Service.Database;

#nullable disable

namespace Stressless_Service.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("Stressless_Service.Models.AuthorizeModel", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("AuthorizeID");

                    b.Property<string>("ClientID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("TEXT");

                    b.Property<string>("LatestLogin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MACAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Authorize");
                });

            modelBuilder.Entity("Stressless_Service.Models.CalenderEvents", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("EventID");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("Start")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("Finish")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("CalenderEvents");
                });

            modelBuilder.Entity("Stressless_Service.Models.ConfigurationModel", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("ConfigurationID");

                    b.Property<string>("CalenderImport")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("DayEndTime")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("DayStartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkingDays")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Calender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UiLoc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Configuration");
                });

            modelBuilder.Entity("Stressless_Service.Models.PromptModel", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("PromptID");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Prompts");
                });

            modelBuilder.Entity("Stressless_Service.Models.ReminderModel", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("ReminderID");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("Stressless_Service.Models.UsedPromptsModel", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("UsedPromptID");

                    b.Property<string>("LastUsed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PromptIdentification")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("UsedPrompts");
                });

#pragma warning restore 612, 618
        }
    }
}
